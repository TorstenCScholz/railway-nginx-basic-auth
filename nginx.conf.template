worker_processes 1;

error_log /var/log/nginx/error.log debug;

events {
  worker_connections 1024;
}

http {
  access_log /var/log/nginx/access.log;
  
  # Keep WS/SSE happy
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # Strip only Basic; keep Bearer etc. if your frontend sends them.
  map $http_authorization $up_auth {
    "~^Basic "  "";
    default     $http_authorization;
  }
  
  # Check if user has auth cookie
  map $cookie_auth_passed $auth_required {
    "1" "off";
    default "Restricted (Tatmin v2)";
  }

  server {
    listen ${PORT};
    server_name _;

    location / {
      auth_basic $auth_required;
      auth_basic_user_file /etc/nginx/.htpasswd;
      
      # Set cookie after successful auth
      add_header Set-Cookie "auth_passed=1; Path=/; Max-Age=86400";
      
      # Debug headers
      add_header X-Debug-Cookie "$cookie_auth_passed";
      add_header X-Debug-Auth-Required "$auth_required";
      add_header X-Debug-Authorization "$http_authorization";

      proxy_set_header Authorization $up_auth;
        
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-Nginx-Proxy true;
      proxy_set_header X-Forwarded-Proto $scheme;
      
      proxy_http_version 1.1;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      proxy_read_timeout 60s;
      proxy_send_timeout 60s;

      proxy_pass ${PROXY_PASS};
    }

    # Internal auth checker: ONLY handles the Basic challenge.
    location = /_gate {
      internal;
      auth_basic "Restricted (Tatmin v2)";          # change realm to bust browser cache if needed
      auth_basic_user_file /etc/nginx/.htpasswd; # created via: htpasswd -c /etc/nginx/.htpasswd <user>
      return 204;  # success â†’ allow main request to proceed
    }

    # Attach the challenge header explicitly on 401
    location @auth_challenge {
      add_header WWW-Authenticate 'Basic realm="Restricted (Tatmin v2)"' always;
      return 401;
    }
  }
}
